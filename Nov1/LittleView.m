//
//  LittleView.m
//  Nov1
//
//  Created by Lisa Jenkins on 11/13/12.
//  Copyright (c) 2012 Lisa Jenkins. All rights reserved.
//

#import "LittleView.h"
#import <CoreLocation/CoreLocation.h>

@implementation LittleView

- (id)initWithFrame:(CGRect)frame
{
    self = [super initWithFrame:frame];
    if (self) {
        self.backgroundColor = [UIColor clearColor];
        TZ = 1;
    }
    return self;
}


// Only override drawRect: if you perform custom drawing.
// An empty implementation adversely affects performance during animation.
- (void)drawRect:(CGRect)rect
{
    CGContextRef c = UIGraphicsGetCurrentContext();
    
    CGRect bounds = self.bounds;
    CGSize s = bounds.size;
    
    CGContextTranslateCTM(c, s.width/2, s.height/2);
    
    
    //corresponding clock
    CGContextBeginPath(c);
    CGFloat radius = 0.4 * s.width;
    
    CGRect r = CGRectMake(-radius, -radius, radius*2, radius*2);
    CGContextAddEllipseInRect(c, r);
    CGContextSetRGBFillColor(c, 0.3, 0.2, 0.8, 1);
    CGContextSetShadow(c, CGSizeMake(5, -5), 5);
    CGContextFillPath(c);
    
    CGContextScaleCTM(c, 0.8, 0.8);
    CGContextAddEllipseInRect(c, r);
    CGContextSetRGBFillColor(c, 1, 1, 1, 0.85);
    CGContextSetShadow(c, CGSizeMake(0, 0), 0);//removes shadow
    CGContextFillPath(c);
    
    CGFloat min = MIN(s.width, s.height);
    CGFloat longSide = 0.05 * min;
    CGFloat shortSide = 0.25 * longSide;
    
    //get current date and calendar; store hours, minutes, and seconds into separate variables
    
    NSDate *date = [[NSDate alloc] init];
    NSCalendar *calendar = [NSCalendar currentCalendar];
    NSDateComponents *components = [calendar components: (NSHourCalendarUnit|NSMinuteCalendarUnit|NSSecondCalendarUnit) fromDate:date];
    CGFloat currentHour = [components hour];
    
    CGContextSetRGBFillColor(c, 0, 0, 0, 1); //sets text color to black
    
    //check for timezone; add 1 to hour
    //default = EST
    switch (TZ) {
        case 2:
            if (currentHour - 1 == 0) {
                currentHour = 12;
            } else {
                currentHour -= 1;
            }
           // zone = @"Central Time Zone";
            break;
        case 3:
            if (currentHour - 2 == 0) {
                currentHour = 12;
            } else {
                currentHour -= 2;
            }
          //  zone = @"Mountain Time Zone";
            break;
        case 4:
            if (currentHour - 3 == 0) {
                currentHour = 12;
            } else {
                currentHour -= 3;
            }
           // zone = @"Pacific Time Zone";
            break;
        case 5:
            currentHour = [components hour]; //reset currentHour to EST
          //  zone = @"Eastern Time Zone";
        default:
         //   zone = @"Eastern Time Zone";
            break;
    }
    
    //CGSize fsize = [zone sizeWithFont: [UIFont boldSystemFontOfSize:20.0]];
  //  [zone drawAtPoint: CGPointMake(-fsize.width/2, s.height/2-fsize.height) withFont: [UIFont boldSystemFontOfSize:20.0]];
    
  /*  NSString *instructions = @"Tap to change the time zone";
    fsize = [instructions sizeWithFont:[UIFont systemFontOfSize: 15]];
    [instructions drawAtPoint:CGPointMake(-fsize.width/2, s.height/2 + fsize.height) withFont:[UIFont systemFontOfSize:15]];*/
    
    CGFloat currentMinute = [components minute];
    CGFloat currentSecond = [components second];
    if (currentHour > 12) {
        currentHour = currentHour - 12;
    }
    
    //1 hour = 30 degrees + minutes * 0.5 degrees
    //1 minute = 6 degrees; 1 second = 6 degrees
    
    CGFloat hourRotation = ((currentHour * 30) + (currentMinute * 0.5)) * M_PI / 180;
    CGContextRotateCTM(c, hourRotation);
    CGRect hours = CGRectMake(-shortSide/2, longSide/2 - radius, shortSide, longSide);
    CGContextAddRect(c, hours);
    CGContextSetRGBFillColor(c, 1, 1, 0, 1);
    CGContextSetShadow(c, CGSizeMake(5, -5), 5);
    CGContextFillPath(c);
    
    CGContextRotateCTM(c, hourRotation * -1); //reverse the hour rotation
    
    CGFloat minuteRotation = currentMinute * 6 * M_PI/180;
    CGContextRotateCTM(c, minuteRotation);
    CGRect minutes = CGRectMake(-shortSide/2, longSide/2 - radius, shortSide, longSide);
    CGContextAddRect(c, minutes);
    CGContextSetRGBFillColor(c, 1, 0, 1, 1);
    CGContextFillPath(c);
    
    CGContextRotateCTM(c, minuteRotation * -1);//reverse the minute rotation
    CGContextRotateCTM(c, (currentSecond * 6) * M_PI / 180);
    CGRect seconds = CGRectMake(-shortSide/2, longSide/2 - radius, shortSide, longSide);
    CGContextAddRect(c, seconds);
    CGContextSetRGBFillColor(c, 0, 1, 1, 1);
    CGContextFillPath(c);
    
    //timezones shown on map
    static CLLocationCoordinate2D est[] = {
        {44.77667838946272, -66.89260468750001},
        {45.2117555601738, -67.15627656250001},
        {45.11880280764724, -67.33205781250001},
        {45.612798246299135, -67.50783906250001},
        {45.7356230990169, -67.81545625000001},
        {47.009017705489555, -67.81545625000001},
        {47.36739452357141, -68.34280000000001},
        {47.24820442760167, -68.51858125000001},
        {47.21836490472705, -69.08987031250001},
        {47.426888794047855, -69.22170625000001},
        {46.3457047402938, -70.05666718750001},
        {46.01099350371431, -70.32033906250001},
        {45.70494215783633, -70.49612031250001},
        {45.42805549200697, -70.75979218750001},
        {45.24270610614762, -71.11135468750001},
        {45.2117555601738, -71.41897187500001},
        {44.99462986682548, -71.55080781250001},
        {44.99462986682548, -74.89065156250001},
        {43.61093413640103, -76.82424531250001},
        {43.515403867717716, -79.02151093750001},
        {43.2599160311756, -79.10940156250001},
        {42.906862522060706, -78.88967500000001},
        {42.162090307109594, -81.30666718750001},
        {41.67158857104266, -82.80080781250001},
        {42.227205591319525, -83.15237031250001},
        {42.55177528952207, -82.66897187500001},
        {43.57910754528324, -82.18557343750001},
        {45.24270610614762, -82.53713593750001},
        {45.85817839597318, -83.50393281250001},
        {45.94991799183816, -83.50393281250001},
        {46.132942424882934, -83.89944062500001},
        {46.04150599585812, -84.03127656250001},
        {46.49717278097675, -84.20705781250001},
        {46.436636060453814, -84.55862031250001},
        {46.91904533187403, -84.95412812500001},
        {48.25276160506679, -88.51369843750001},
        {47.98873604983253, -89.52444062500001},
        {46.52741589606972, -90.31545625000001},
        {45.98046416924904, -88.42580781250001},
        {45.42805549200697, -87.81057343750001},
        {45.08778485158617, -87.54690156250001},
        {45.42805549200697, -86.88772187500001},
        {45.2117555601738, -86.27248750000001},
        {42.45458061217248, -86.97561250000001},
        {41.67158857104266, -87.10744843750001},
        {41.70440594151084, -86.36037812500001},
        {41.243440330247644, -86.75588593750001},
        {41.04488076234988, -87.23928437500001},
        {40.97856067185894, -87.59084687500001},
        {39.70582378532935, -87.67873750000001},
        {39.434824790206044, -86.05276093750001},
        {38.51240211242518, -85.61330781250001},
        {37.298866083063764, -84.60256562500001},
        {37.19391942060266, -84.20705781250001},
        {36.6669979679065, -84.11916718750001},
        {36.59646688084445, -83.37209687500001},
        {36.13644403246181, -83.37209687500001},
        {35.53078457877149, -83.63576875000001},
        {35.17236025705591, -84.29494843750001},
        {34.99255250129977, -84.33889375000001},
        {34.956543416397466, -85.61330781250001},
        {32.50826780824508, -85.08596406250001},
        {32.211302225878605, -84.99807343750001},
        {31.464642694647658, -85.21780000000001},
        {30.938404881584017, -85.08596406250001},
        {30.598569048826267, -84.77834687500001},
        {29.953399667836916, -84.33889375000001},
        {30.105585360098235, -84.11916718750001},
        {29.800980676363615, -83.45998750000001},
        {29.112227693315678, -83.06447968750001},
        {29.150614159310376, -82.88869843750001},
        {28.6119042550042, -82.58108125000001},
        {27.992837166824938, -82.93264375000001},
        {27.253054728310662, -82.66897187500001},
        {26.783265913015903, -82.27346406250001},
        {26.586942973239346, -82.05373750000001},
        {26.074929363830524, -81.79006562500001},
        {25.837854997709684, -81.61428437500001},
        {25.91693282485049, -81.48244843750001},
        {25.639929311089602, -81.26272187500001},
        {25.203338296749596, -80.86721406250001},
        {25.12378870884972, -80.69143281250001},
        {25.7191391337305, -80.12014375000001},
        {26.82248987930399, -80.12014375000001},
        {27.68195935105934, -80.29592500000001},
        {28.070417184857227, -80.47170625000001},
        {28.34150574952154, -80.64748750000001},
        {28.65047603282475, -80.51565156250001},
        {29.112227693315678, -80.82326875000001},
        {29.610129961623855, -81.17483125000001},
        {30.371346799264256, -81.35061250000001},
        {31.089057045536343, -81.35061250000001},
        {31.726660370115688, -81.13088593750001},
        {32.24847622671468, -80.51565156250001},
        {32.84118526141406, -79.72463593750001},
        {32.91499821568899, -79.28518281250001},
        {33.31986823446273, -79.10940156250001},
        {33.75940921737933, -78.75783906250001},
        {33.941890305927856, -78.23049531250001},
        {33.86894465217078, -78.05471406250001},
        {34.08759419533557, -77.79104218750001},
        {34.45075767495112, -77.43947968750001},
        {34.52320194217276, -76.82424531250001},
        {34.66790155587455, -76.42873750000001},
        {34.92051850379218, -76.25295625000001},
        {35.06452315897252, -76.25295625000001},
        {35.315920829724085, -75.94533906250001},
        {35.673708359726966, -75.68166718750001},
        {36.13644403246181, -75.85744843750001},
        {36.45521115991327, -75.90139375000001},
        {36.91334789955356, -76.07717500000001},
        {36.91334789955356, -76.25295625000001},
        {37.22891787982309, -76.29690156250001},
        {37.578008561879045, -76.29690156250001},
        {38.09858856947522, -76.29690156250001},
        {38.855440616875, -76.42873750000001},
        {39.06047360231006, -76.42873750000001},
        {38.58114133667909, -76.20901093750001},
        {38.30579044598702, -76.25295625000001},
        {38.09858856947522, -75.98928437500001},
        {37.82140308397559, -75.76955781250001},
        {37.298866083063764, -76.03322968750001},
        {37.053763329038844, -75.90139375000001},
        {37.682418346175275, -75.59377656250001},
        {38.09858856947522, -75.11037812500001},
        {38.54677993807522, -75.02248750000001},
        {38.75270176729696, -75.11037812500001},
        {39.128686040126006, -75.37405000000001},
        {39.16276751091179, -75.19826875000001},
        {38.78696450995867, -74.89065156250001},
        {39.366909607182784, -74.49514375000001},
        {39.942078268637694, -74.05569062500001},
        {40.37867891517211, -73.92385468750001},
        {40.612607650733494, -74.01174531250001},
        {40.67929457785536, -73.83596406250001},
        {40.545854101386126, -73.35256562500001},
        {40.745914858993814, -72.73733125000001},
        {41.07801577025615, -71.99026093750001},
        {41.11113408303313, -72.29787812500001},
        {41.01172906198576, -72.82522187500001},
        {41.11113408303313, -73.04494843750001},
        {41.21038882422908, -72.64944062500001},
        {41.40844718811455, -71.55080781250001},
        {41.47433290464964, -70.80373750000001},
        {41.2764751281342, -70.54006562500001},
        {41.2764751281342, -69.88088593750001},
        {41.90095851807606, -69.88088593750001},
        {42.162090307109594, -70.18850312500001},
        {41.83550798721505, -70.23244843750001},
        {41.80275759557594, -70.54006562500001},
        {42.29225377980475, -70.71584687500001},
        {42.45458061217248, -70.71584687500001},
        {42.61648778729575, -70.58401093750001},
        {43.03548101836548, -70.62795625000001},
        {43.38779455830905, -70.36428437500001},
        {43.73807216193673, -69.79299531250001},
        {43.99154001392179, -68.87014375000001},
        {44.30685898895405, -67.99123750000001},
        {44.495241710461606, -67.81545625000001},
        {44.46388671363355, -67.41994843750001},
        {44.71425486648932, -67.20022187500001},
        {44.77667838946272, -66.89260468750001}
    };
    
    static CLLocationCoordinate2D cst[] = {
        {47.98873604983253, -89.61233125000001},
        {48.135584439543166, -90.22756562500001},
        {48.194206518629485, -90.84280000000001},
        {48.22349243496848, -90.93069062500001},
        {48.0475256765007, -91.45803437500001},
        {48.34046865742026, -92.07326875000001},
        {48.10624827299373, -92.38088593750001},
        {48.57361779134868, -92.73244843750001},
        {48.66077274835724, -93.25979218750001},
        {48.48631233766436, -93.69924531250001},
        {48.631737814313595, -94.00686250000001},
        {48.77674535238088, -94.62209687500001},
        {49.38121950585938, -95.06155000000001},
        {49.00788879107056, -95.14944062500001},
        {48.95020310699329, -104.02639375000001},
        {47.038974872282914, -103.98244843750001},
        {46.8890209122284, -102.88381562500001},
        {46.85897967639261, -101.03811250000001},
        {46.52741589606972, -101.43362031250001},
        {46.0720016463233, -100.99416718750001},
        {45.919354970876384, -101.25783906250001},
        {45.88877510577727, -100.59865937500001},
        {45.39720605644194, -100.59865937500001},
        {44.93244227962393, -100.81838593750001},
        {43.864940804425395, -101.16994843750001},
        {43.2599160311756, -101.56545625000001},
        {42.93904236131432, -101.38967500000001},
        {42.519393852860745, -100.90627656250001},
        {41.80275759557594, -100.77444062500001},
        {41.11113408303313, -101.25783906250001},
        {40.41214723297425, -101.25783906250001},
        {40.00943028502412, -102.13674531250001},
        {39.434824790206044, -102.13674531250001},
        {39.33292722163079, -101.43362031250001},
        {38.34026673790084, -101.47756562500001},
        {37.717189002501364, -101.65334687500001},
        {37.50832057840703, -102.04885468750001},
        {37.01868377045675, -102.09280000000001},
        {36.983588008884006, -103.05959687500001},
        {36.525871262103685, -103.05959687500001},
        {32.02520439199317, -103.14748750000001},
        {32.02520439199317, -104.90530000000001},
        {30.862989579331167, -105.21291718750001},
        {30.257537038209893, -104.86135468750001},
        {29.839107256645654, -104.77346406250001},
        {29.304016517449845, -104.07033906250001},
        {28.92008069888742, -103.36721406250001},
        {28.996982381763967, -103.05959687500001},
        {29.68651376456994, -102.66408906250001},
        {29.800980676363615, -102.26858125000001},
        {29.762839560007755, -101.34572968750001},
        {29.227344063199475, -100.90627656250001},
        {28.534718202551268, -100.46682343750001},
        {28.10918620812926, -100.11526093750001},
        {27.759762260781034, -99.76369843750001},
        {27.174893177216127, -99.36819062500001},
        {26.31152467065966, -99.06057343750001},
        {25.877400529116915, -97.56643281250001},
        {25.877400529116915, -97.21487031250001},
        {26.70477731751867, -97.56643281250001},
        {27.837509602146067, -97.03908906250001},
        {28.496103952551515, -96.07229218750001},
        {28.727577030298935, -95.67678437500001},
        {29.418917274857677, -94.88576875000001},
        {29.800980676363615, -93.83108125000001},
        {29.839107256645654, -93.21584687500001},
        {29.800980676363615, -92.82033906250001},
        {29.610129961623855, -92.55666718750001},
        {29.457188700781714, -92.11721406250001},
        {29.57191633599554, -91.80959687500001},
        {29.418917274857677, -91.63381562500001},
        {29.150614159310376, -90.88674531250001},
        {29.073826900448882, -90.27151093750001},
        {29.265687477427292, -89.83205781250001},
        {29.150614159310376, -89.61233125000001},
        {29.150614159310376, -89.61233125000001},
        {28.92008069888742, -89.21682343750001},
        {29.0354117926187, -88.90920625000001},
        {29.418917274857677, -89.08498750000001},
        {29.762839560007755, -89.17287812500001},
        {30.181590495305983, -88.68947968750001},
        {30.105585360098235, -87.94240937500001},
        {30.105585360098235, -87.81057343750001},
        {30.295488309977287, -87.10744843750001},
        {30.371346799264256, -86.27248750000001},
        {30.371346799264256, -85.96487031250001},
        {30.371346799264256, -85.70119843750001},
        {30.409253994922302, -85.04201875000001},
        {30.74975533627994, -85.04201875000001},
        {30.938404881584017, -85.04201875000001},
        {31.314587946581323, -85.04201875000001},
        {31.83872771702489, -85.04201875000001},
        {32.32277858684105, -84.99807343750001},
        {32.471200478767884, -84.95412812500001},
        {34.88447777077489, -85.70119843750001},
        {35.02854575123631, -86.09670625000001},
        {35.315920829724085, -86.09670625000001},
        {35.63800134906377, -85.92092500000001},
        {35.852003765035064, -86.62405000000001},
        {36.17192689651732, -86.62405000000001},
        {36.56117713492981, -86.09670625000001},
        {36.94847605001063, -86.27248750000001},
        {36.94847605001063, -86.27248750000001},
        {37.333815816106735, -85.96487031250001},
        {37.333815816106735, -85.96487031250001},
        {37.890797514404525, -85.70119843750001},
        {38.202263220312474, -85.92092500000001},
        {38.202263220312474, -86.05276093750001},
        {38.47800786425793, -86.62405000000001},
        {38.58114133667909, -87.41506562500001},
        {38.64981483476148, -87.54690156250001},
        {38.88965397250858, -87.59084687500001},
        {39.128686040126006, -87.63479218750001},
        {39.50267382996686, -87.50295625000001},
        {40.00943028502412, -87.50295625000001},
        {40.57923920233807, -87.54690156250001},
        {40.712613050642354, -87.54690156250001},
        {41.04488076234988, -87.06350312500001},
        {41.50725067608817, -86.88772187500001},
        {41.769990455969825, -86.93166718750001},
        {41.86824162875236, -87.28322968750001},
        {42.519393852860745, -87.19533906250001},
        {44.33829823134151, -86.93166718750001},
        {45.18078816184573, -86.27248750000001},
        {45.458888076638594, -86.79983125000001},
        {45.18078816184573, -87.37112031250001},
        {45.2117555601738, -87.63479218750001},
        {45.674244368943064, -87.76662812500001},
        {45.98046416924904, -88.51369843750001},
        {46.436636060453814, -89.87600312500001},
        {46.76875506028149, -90.18362031250001},
        {47.575330629962366, -89.91994843750001},
        {47.98873604983253, -89.52444062500001}
    };
    
    static CLLocationCoordinate2D mt[] = {
        {48.97905429428938, -104.15822968750001},
        {48.97905429428938, -116.15530000000001},
        {47.90042589650274, -116.02346406250001},
        {47.48631589502705, -115.71584687500001},
        {47.24820442760167, -115.49612031250001},
        {46.6482200774343, -114.66115937500001},
        {46.678379057944696, -114.44143281250001},
        {45.98046416924904, -114.48537812500001},
        {45.551284727837476, -114.44143281250001},
        {45.551284727837476, -115.05666718750001},
        {45.36633976968213, -115.36428437500001},
        {45.458888076638594, -116.15530000000001},
        {45.82756484091536, -116.55080781250001},
        {45.919354970876384, -116.81447968750001},
        {45.458888076638594, -116.63869843750001},
        {44.83903450324597, -116.99026093750001},
        {44.36972062540974, -117.25393281250001},
        {44.149410068253516, -117.69338593750001},
        {43.61093413640103, -118.04494843750001},
        {42.93904236131432, -118.04494843750001},
        {42.971205391345606, -117.47365937500001},
        {43.03548101836548, -117.16604218750001},
        {41.966342031749896, -117.03420625000001},
        {41.93365865309723, -114.13381562500001},
        {36.20739370162915, -114.08987031250001},
        {36.17192689651732, -114.17776093750001},
        {36.17192689651732, -114.74905000000001},
        {34.848421224664826, -114.66115937500001},
        {34.414511952931605, -114.30959687500001},
        {34.1967078692382, -114.17776093750001},
        {33.53991812503107, -114.61721406250001},
        {33.20963431068391, -114.83694062500001},
        {32.54531986183126, -114.70510468750001},
        {31.352124108110143, -111.18947968750001},
        {31.352124108110143, -108.50881562500001},
        {31.801387027086896, -106.48733125000001},
        {32.02520439199317, -106.48733125000001},
        {32.02520439199317, -103.10354218750001},
        {36.983588008884006, -103.01565156250001},
        {37.053763329038844, -102.04885468750001},
        {37.75194334765884, -102.04885468750001},
        {37.890797514404525, -101.47756562500001},
        {38.37472663033026, -101.47756562500001},
        {38.958031266765836, -101.47756562500001},
        {39.26491288203222, -101.52151093750001},
        {39.33292722163079, -102.00490937500001},
        {39.874659888950774, -102.00490937500001},
        {40.00943028502412, -101.03811250000001},
        {40.445598913611306, -101.21389375000001},
        {40.67929457785536, -100.99416718750001},
        {41.44139840786196, -100.99416718750001},
        {41.80275759557594, -101.34572968750001},
        {41.80275759557594, -100.37893281250001},
        {41.99900865199091, -100.24709687500001},
        {42.584139934871864, -100.24709687500001},
        {42.971205391345606, -100.90627656250001},
        {43.483526783169545, -100.90627656250001},
        {43.833248901287355, -100.55471406250001},
        {44.870187281371216, -100.37893281250001},
        {45.33545663148557, -100.15920625000001},
        {45.64352973190252, -100.42287812500001},
        {45.919354970876384, -100.46682343750001},
        {45.98046416924904, -101.82912812500001},
        {46.193815844910304, -101.60940156250001},
        {46.587851640612264, -102.57619843750001},
        {46.949052936502596, -102.40041718750001},
        {47.12874551684389, -103.19143281250001},
        {47.39715005573457, -103.71877656250001},
        {47.39715005573457, -104.07033906250001},
        {49.00788879107056, -104.11428437500001}
    };
    
    static CLLocationCoordinate2D pst[] = {
        {48.97905429428938, -117.03420625000001},
        {49.007888791070535, -123.23049531250001},
        {48.77674535238088, -122.96682343750001},
        {48.74777726679783, -123.23049531250001},
        {48.398856330492706, -123.14260468750001},
        {48.25276160506679, -123.66994843750001},
        {48.48631233766434, -124.76858125000001},
        {48.07689535259952, -124.76858125000001},
        {47.8709556480483, -124.68069062500001},
        {47.69378196405284, -124.41701875000001},
        {47.27802714953021, -124.28518281250001},
        {46.97904372730488, -124.10940156250001},
        {46.708521214554644, -124.02151093750001},
        {46.315360632926456, -124.10940156250001},
        {45.11880280764724, -124.06545625000001},
        {44.21244017635204, -124.19729218750001},
        {43.3558501630321, -124.32912812500001},
        {42.74571123622239, -124.72463593750001},
        {41.966342031749875, -124.32912812500001},
        {41.21038882422908, -124.02151093750001},
        {40.84572026845757, -124.19729218750001},
        {40.14393511767748, -124.32912812500001},
        {39.468757579918304, -123.75783906250001},
        {39.19683247751611, -123.97756562500001},
        {38.61548630373361, -123.53811250000001},
        {37.47345216427498, -122.52737031250001},
        {36.73746447549621, -122.08791718750001},
        {36.66699796790647, -121.78030000000001},
        {36.24284444148143, -121.86819062500001},
        {35.24417231340957, -121.07717500000001},
        {35.10048471730198, -120.59377656250001},
        {34.59558325604974, -120.63772187500001},
        {34.414511952931605, -120.15432343750001},
        {34.233047767125534, -119.58303437500001},
        {34.01477350843801, -119.01174531250001},
        {34.01477350843801, -118.52834687500001},
        {33.7594092173793, -118.00100312500001},
        {32.54531986183126, -117.16604218750001},
        {32.76731087686872, -114.83694062500001},
        {32.87809942180377, -114.61721406250001},
        {33.17285876679949, -114.70510468750001},
        {33.39328017440142, -114.92483125000001},
        {33.53991812503104, -114.61721406250001},
        {33.97833971762242, -114.61721406250001},
        {34.233047767125534, -114.08987031250001},
        {34.70403705667052, -114.48537812500001},
        {34.92051850379215, -114.70510468750001},
        {36.13644403246181, -114.70510468750001},
        {36.20739370162912, -114.52932343750001},
        {35.95878905101121, -114.13381562500001},
        {36.02989915020478, -114.13381562500001},
        {41.966342031749875, -114.13381562500001},
        {41.966342031749875, -117.03420625000001},
        {42.486995626524546, -117.07815156250001},
        {42.55177528952207, -117.78127656250001},
        {43.29191089836566, -118.04494843750001},
        {44.149410068253516, -118.13283906250001},
        {44.149410068253516, -117.73733125000001},
        {44.117869745854094, -117.60549531250001},
        {44.054738567160186, -117.03420625000001},
        {44.243929960991174, -117.03420625000001},
        {44.46388671363355, -117.20998750000001},
        {44.776678389462695, -116.99026093750001},
        {44.99462986682548, -116.94631562500001},
        {45.64352973190252, -116.50686250000001},
        {45.796934440074075, -116.72658906250001},
        {46.132942424882934, -116.90237031250001},
        {46.315360632926456, -116.94631562500001},
        {45.94991799183816, -116.41897187500001},
        {45.70494215783631, -115.84768281250001},
        {45.61279824629911, -115.27639375000001},
        {45.91935497087636, -114.66115937500001},
        {46.52741589606969, -114.52932343750001},
        {46.76875506028149, -114.83694062500001},
        {47.30783307189719, -115.40822968750001},
        {48.04752567650067, -116.06740937500001},
        {48.74777726679783, -116.19924531250001},
        {48.97905429428938, -116.15530000000001}
    };
    
    static const size_t n = sizeof est/sizeof est[0];
    
    static const size_t n2 = sizeof cst/sizeof cst[0];
    
    static const size_t n3 = sizeof mt/sizeof mt[0];
    
    static const size_t n4 = sizeof pst/sizeof pst[0];
    
    
    CGFloat xtranslateEst = 73.965;
    CGFloat ytranslateEst = -40.79;
    CGFloat xtranslateCst = 90.315;
    CGFloat ytranslateCst = -38.615;
    CGFloat xtranslateMt = 109.563;
    CGFloat ytranslateMt = -40.745;
    CGFloat xtranslatePst = 119.846;
    CGFloat ytranslatePst = -41.900;
    
    CGFloat scale = 7;
    
    //drawing est timezone
    if (TZ == 1){
        [self scaleAndTranslate:c AndScale:scale YTrans:ytranslateEst XTrans:xtranslateEst];
        [self drawTimeZone:c withMapPoints:est ofSize:n forScale:scale];
    }
    //drawing cst timezone & setting zone string
    if (TZ == 2){
        [self scaleAndTranslate:c AndScale:scale YTrans:ytranslateCst XTrans:xtranslateCst];
        [self drawTimeZone:c withMapPoints:cst ofSize:n2 forScale:scale];
    }
    
    //drawing mt timezone
    if (TZ == 3) {
        [self scaleAndTranslate: c AndScale: scale YTrans: ytranslateMt XTrans: xtranslateMt];
        [self drawTimeZone:c withMapPoints:mt ofSize:n3 forScale:scale];
    }
    
    //drawing pst timezone
    if (TZ == 4) {
        [self scaleAndTranslate: c AndScale: scale YTrans: ytranslatePst XTrans: xtranslatePst];
        [self drawTimeZone:c withMapPoints:pst ofSize:n4 forScale:scale];
    }
    
    
    [self performSelector:@selector(setNeedsDisplay) withObject:nil afterDelay:1];
}

-(NSInteger) getTZ {
    return TZ;
}

-(void)incrementTZ {
    if (TZ >= 4) {
        TZ = 1;
        return;
    }
    ++TZ;
}

-(void) scaleAndTranslate: (CGContextRef) c AndScale: (CGFloat) scale YTrans: (CGFloat) y XTrans: (CGFloat) x {
    CGContextScaleCTM(c, scale * cos(y * M_PI/180), -scale);
    CGContextTranslateCTM(c, x, y);
}

-(void) drawTimeZone: (CGContextRef) c withMapPoints: (CLLocationCoordinate2D *) coord ofSize: (size_t) size forScale: (CGFloat) scale{
    CGContextBeginPath(c);
    CGContextMoveToPoint(c, coord[0].longitude, coord[0].latitude);
    for (size_t i=0; i<size; ++i) {
        CGContextAddLineToPoint(c, coord[i].longitude, coord[i].latitude);
    }
    CGContextClosePath(c);
    CGContextSetRGBFillColor(c, 0, 0.3, 1, 0.6);
    //CGContextSetLineWidth(c, 1.0/scale);
    CGContextFillPath(c);
}
@end

